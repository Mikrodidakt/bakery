name: Release

on:
  push:
    tags:
      - 'v*'  # Triggers the workflow on new tags that match the pattern
  workflow_dispatch:  # Allows manual trigger from the GitHub Actions tab
    inputs:
      tag_name:
        description: 'Tag name for the release (e.g., v0.1.43)'
        required: true
        default: ''

env:
  CARGO_TERM_COLOR: always

jobs:
  release:
    runs-on: ubuntu-22.04

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Fetch all history and tags

    - name: Debug Info
      run: |
        git --version
        git remote -v
        git tag -l
        pwd
        ls -la

    - name: Config
      run: |
        git config --global user.name "github-actions[bot]"
        git config --global user.email "github-actions[bot]@users.noreply.github.com"

    - name: Clean
      run: |
        make clean

    - name: Get Tag
      run: |
        if [[ -n "${{ github.event.inputs.tag_name }}" ]]; then
          CURRENT_TAG=${{ github.event.inputs.tag_name }}
        else
          CURRENT_TAG=${{ github.ref }}
          CURRENT_TAG=${CURRENT_TAG#refs/tags/}  # Strip off 'refs/tags/' prefix
        fi
        echo "CURRENT_TAG=${CURRENT_TAG}" >> "$GITHUB_ENV"
        PREVIOUS_TAG=$(git describe --tags --abbrev=0 "${CURRENT_TAG}^")
        echo "PREVIOUS_TAG=${PREVIOUS_TAG}" >> "$GITHUB_ENV"

    - name: Release Note
      id: generate_release_notes
      run: |
        echo 'RELEASE_NOTES<<EOF' >> $GITHUB_OUTPUT
        echo "**Full Changelog**: https://github.com/${GITHUB_REPOSITORY}/compare/${PREVIOUS_TAG}...${CURRENT_TAG}" >> $GITHUB_OUTPUT
        echo 'EOF' >> $GITHUB_OUTPUT
      shell: bash

    - name: Build and Tests
      run: make test

    - name: Package
      run: make deb-package

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
      with:
        tag_name: ${{ env.CURRENT_TAG }}
        release_name: bakery ${{ env.CURRENT_TAG }}
        body: ${{ steps.generate_release_notes.outputs.RELEASE_NOTES }}
        draft: false
        prerelease: false

    - name: Upload Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: artifacts/bakery.deb
        asset_name: bakery-${{ env.CURRENT_TAG }}.deb
        asset_content_type: application/deb

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to ghcr.io
      uses: docker/login-action@v3
      env:
        GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Get Docker Namespace and Tag
      id: repository_name
      run: |
        DOCKER_TAG=${{ env.CURRENT_TAG }}
        echo "DOCKER_TAG=${DOCKER_TAG#v}" >> $GITHUB_ENV
        echo "DOCKER_NAMESPACE=$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

    - name: Extract Docker Metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ghcr.io/${{ env.DOCKER_NAMESPACE }}/bakery-workspace:${{ env.DOCKER_TAG }}

    - name: Build and Push Docker Image
      uses: docker/build-push-action@v5
      env:
        GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
      with:
        context: .
        file: ./docker/Dockerfile
        push: true
        tags: ghcr.io/${{ env.DOCKER_NAMESPACE }}/bakery-workspace:${{ env.DOCKER_TAG }}
        labels: ${{ steps.meta.outputs.labels }}

    - name: Log out from ghcr.io
      run: docker logout ghcr.io

    - name: Publish crates.io
      env:
        CRATES_IO_TOKEN: ${{ secrets.CRATES_IO_TOKEN }}
      run: |
        cargo login ${CRATES_IO_TOKEN}
        cargo publish
